---
# The MLONMCU_HOME is filled in automatically when creating the environment
home: "{{ home_dir }}"
logging:
  level: DEBUG
  to_file: false
  rotate: false
# Default locations for certain directoriescan be changed here
# Non-absolute paths will always be threated relative to the MLONMCU_HOME
paths:
  # Where the dependencies are downloaded and installed
  deps: deps
  # If logging to file is used keep logs in this directory
  logs: logs
  # Location where reports and artifacts are written to
  results: results
  # Directory for intermediate build products, should be located on a large enough drive
  temp: temp
  # A collection of models which will be used to look for models
  # The paths will be checked in the order defined here stopping at the first match
  # Non-existant paths will be skipped without throwing an error
  models:
    - "{{ home_dir }}/models"
    - "{{ config_dir }}/models"
# Here default clone_urls
repos:
  tensorflow:  # TODO: rename to tflite-micro?
    url: "git@github.com:tensorflow/tflite-micro.git"
    ref: main
  tflite_micro_compiler:
    url: "git@github.com:PhilippvK/tflite_micro_compiler.git"
    ref: patches
  tvm:
    url: "git@github.com:tum-ei-eda/tvm.git"
    ref: latest_patched
  utvm_staticrt_codegen:
    url: "git@github.com:tum-ei-eda/utvm_staticrt_codegen.git"
    ref: master
  tvm_extensions:
    url: "git@github.com:tum-ei-eda/tvm_extensions.git"
    ref: main
  etiss:
    url: "git@github.com:tum-ei-eda/etiss.git"
    ref: master
  muriscvnn:
    url: "git@github.com:fabianpedd/muriscv_nn.git"
    ref: main
  packer:
    url: "git@gitlab.lrz.de:de-tum-ei-eda-esl/tflite-pack.git"
    ref: main
  spike:
    url: "git@github.com:riscv-software-src/riscv-isa-sim.git"
    ref: master
  spikepk:
    url: "git@github.com:riscv-software-src/riscv-pk.git"
    ref: master
  cmsis:
    url: "https://github.com/ARM-software/CMSIS_5.git"
    ref: 8c60448c0e1e50e426180b26db9bc31ddf774361
  mlif:
    url: "git@github.com:tum-ei-eda/mlonmcu-sw.git"
    ref: main
frameworks:
  supported: &supported_frameworks
    - tflm
    - tvm
  use: *supported_frameworks
backend:
  supported:
    # - tflmc
    - tflmi
    - tvmaot
    - tvmrt
    - tvmcg
  use:
    - tvmaot
frontends:
  supported: &supported_frontends
    - tflite
    # - packed
    # - onnx
  use: *supported_frontends
platforms:
  supported: &supported_platforms
    - mlif
    - espidf
  use: *supported_platforms
targets:
  supported:
    - etiss_pulpino  # mlif
    - spike  # mlif
    - ovpsim  # mlif
    - host_x86  # mlif
    - corstone300  # mlif
    # espidf targets do not need to be listed here
  use:
    - etiss_pulpino
features:
  supported:
    - gdbserver
    - etissdbg
    - vext
    - trace
    - disable_legalize
    - debug_arena
    - unpacked_api
    - usmp
    - cmsisnn
    - muriscvnn
    # - cmsisnnbyoc
    # - packing
    # - packed
    # - ethosu
  use: []
# Issues: Do we need to add user-provided postprocesses to the list as well?
postprocesses:
  supported:
    - detailed_cycles
    - average_cycles
    - filter_cols
    - features2cols
    - config2cols
    - bytes2kb
    - visualize
  use: []
vars:
  # tvm.make_tool: "ninja"
  llvm.version: "11.1.0"
  runs_per_stage: true
  riscv_gcc.dl_url: "https://syncandshare.lrz.de/dl/fi89JQF89pEiWwP6aQh7cM4H/rv32gcv.tar.xz"
